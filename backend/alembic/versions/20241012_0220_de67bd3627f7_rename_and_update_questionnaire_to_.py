"""Rename and Update: questionnaire to survey

Revision ID: de67bd3627f7
Revises: 7d0871f0bad1
Create Date: 2024-10-12 02:20:54.372211

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "de67bd3627f7"
down_revision: Union[str, None] = "7d0871f0bad1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "surveys",
        sa.Column("id", sa.BIGINT(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("organization_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "status_code",
            sa.Enum("OPEN", "ARCHIVE", name="surveystatuscode"),
            nullable=False,
        ),
        sa.Column("start_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("end_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("max_response_number", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "survey_response_results",
        sa.Column("id", sa.BIGINT(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column("application_id", sa.Integer(), nullable=True),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("question_id", sa.Integer(), nullable=False),
        sa.Column("answers_ids", sa.ARRAY(sa.Integer()), nullable=False),
        sa.Column("answer_text", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("questionnaires")
    op.drop_table("question_answer_results")
    op.add_column("answers", sa.Column("is_correct", sa.Boolean(), nullable=False))
    op.add_column("events", sa.Column("survey_id", sa.Integer(), nullable=True))
    op.drop_column("events", "questionnaire_id")
    op.add_column("questions", sa.Column("survey_id", sa.Integer(), nullable=False))
    op.drop_column("questions", "questionnaire_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "questions",
        sa.Column(
            "questionnaire_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.drop_column("questions", "survey_id")
    op.add_column(
        "events",
        sa.Column("questionnaire_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.drop_column("events", "survey_id")
    op.drop_column("answers", "is_correct")
    op.create_table(
        "question_answer_results",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("event_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("application_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("question_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "answers_ids",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="question_answer_results_pkey"),
    )
    op.create_table(
        "questionnaires",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column(
            "status_code",
            postgresql.ENUM("OPEN", "ARCHIVE", name="questionnairestatuscode"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("organization_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="questionnaires_pkey"),
    )
    op.drop_table("survey_response_results")
    op.drop_table("surveys")
    # ### end Alembic commands ###
