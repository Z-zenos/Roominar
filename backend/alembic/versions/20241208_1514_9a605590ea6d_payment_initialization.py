"""Payment Initialization

Revision ID: 9a605590ea6d
Revises: e50f019e9c34
Create Date: 2024-12-08 15:14:38.759257

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "9a605590ea6d"
down_revision: Union[str, None] = "e50f019e9c34"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "transactions",
        sa.Column("id", sa.BIGINT(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("application_id", sa.Integer(), nullable=False),
        sa.Column("ticket_id", sa.Integer(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "PURCHASED",
                "CANCELED",
                "FAILED",
                name="transactionstatuscode",
            ),
            nullable=True,
        ),
        sa.Column(
            "type",
            sa.Enum(
                "DONATE",
                "REFUND_CANCEL_TICKET",
                "PURCHASED_TICKET",
                name="transactiontypecode",
            ),
            nullable=True,
        ),
        sa.Column("total_amount", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "applications",
        sa.Column("purchased_ticket_number", sa.Integer(), nullable=False),
    )
    op.alter_column(
        "applications", "last_name", existing_type=sa.VARCHAR(length=255), nullable=True
    )
    op.drop_column("applications", "ticket_id")
    op.drop_column("applications", "canceled_at")
    op.add_column(
        "events",
        sa.Column("max_application_number_per_account", sa.Integer(), nullable=True),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("events", "max_application_number_per_account")
    op.add_column(
        "applications",
        sa.Column(
            "canceled_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "applications",
        sa.Column("ticket_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.alter_column(
        "applications",
        "last_name",
        existing_type=sa.VARCHAR(length=255),
        nullable=False,
    )
    op.drop_column("applications", "purchased_ticket_number")
    op.drop_table("transactions")
    # ### end Alembic commands ###
