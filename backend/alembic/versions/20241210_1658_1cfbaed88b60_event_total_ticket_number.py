"""Event: total ticket number

Revision ID: 1cfbaed88b60
Revises: 952fdebc00e4
Create Date: 2024-12-10 16:58:32.793449

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "1cfbaed88b60"
down_revision: Union[str, None] = "952fdebc00e4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "applications",
        sa.Column("successful_purchased_ticket_number", sa.Integer(), nullable=True),
    )
    op.add_column(
        "applications",
        sa.Column(
            "industry_code",
            sa.Enum(
                "REAL_ESTATE",
                "CONSTRUCTION",
                "FOOD_DRINK",
                "COSMETICS_MANUFACTURING",
                "ELECTRONICS_MANUFACTURING",
                "PRECISION_MANUFACTURING",
                "AUTOMOTIVE_MANUFACTURING",
                "FASHION_MANUFACTURING",
                "B2C_MANUFACTURING",
                "B2B_MANUFACTURING",
                "LOGISTICS",
                "IT_COMMUNICATIONS",
                "CONTRACT_DEVELOPMENT",
                "RETAIL",
                "WHOLESALE",
                "FINANCE",
                "HOSPITALITY",
                "CONSULTING",
                "HEALTHCARE",
                "ADVERTISING",
                "ENTERTAINMENT",
                "EDUCATION",
                "MEDIA",
                "MINING",
                "TRANSPORTATION",
                "WAREHOUSING",
                "CHEMICAL",
                "OTHER",
                name="industrycode",
            ),
            nullable=True,
        ),
    )
    op.add_column(
        "applications",
        sa.Column(
            "job_type_code",
            sa.Enum(
                "DEV",
                "QA",
                "PM",
                "TESTER",
                "SYSADMIN",
                "DBA",
                "SA",
                "ACC",
                "FIN",
                "CFA",
                "TAX",
                "AUD",
                "SEO",
                "SMM",
                "PR",
                "AD",
                "CMM",
                "TEACHER",
                "LECTURER",
                "TUTOR",
                "PRINCIPAL",
                "COUNSELOR",
                "DOCTOR",
                "NURSE",
                "PHARM",
                "SURGEON",
                "THER",
                "ARCH",
                "ENG",
                "CIVIL",
                "CON",
                "QS",
                "DESIGNER",
                "ARTIST",
                "WRITER",
                "MUSICIAN",
                "ACTOR",
                "CS",
                "SALES",
                "CRM",
                "CASHIER",
                "MERCH",
                "DRIVER",
                "LOG",
                "WAREHOUSE",
                "SHIP",
                "FARMER",
                "AGR",
                "VET",
                "HORT",
                name="jobtypecode",
            ),
            nullable=True,
        ),
    )
    op.drop_column("applications", "status")
    op.drop_column("applications", "purchased_ticket_number")
    op.add_column(
        "events", sa.Column("total_ticket_number", sa.Integer(), nullable=True)
    )
    op.drop_column("events", "application_number")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "events",
        sa.Column(
            "application_number", sa.INTEGER(), autoincrement=False, nullable=True
        ),
    )
    op.drop_column("events", "total_ticket_number")
    op.add_column(
        "applications",
        sa.Column(
            "purchased_ticket_number", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "applications",
        sa.Column(
            "status",
            postgresql.ENUM(
                "PENDING", "APPROVED", "REJECTED", name="applicationstatuscode"
            ),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_column("applications", "job_type_code")
    op.drop_column("applications", "industry_code")
    op.drop_column("applications", "successful_purchased_ticket_number")
    # ### end Alembic commands ###
