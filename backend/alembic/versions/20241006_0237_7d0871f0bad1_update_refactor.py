"""Update: refactor

Revision ID: 7d0871f0bad1
Revises: 9e982d1a4da0
Create Date: 2024-10-06 02:37:07.939383

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "7d0871f0bad1"
down_revision: Union[str, None] = "9e982d1a4da0"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("answers", "questionnaire_id")

    op.alter_column(
        "events", "name", existing_type=sa.VARCHAR(length=1024), nullable=False
    )

    op.alter_column(
        "organizations",
        "type",
        existing_type=postgresql.ENUM(
            "PERSONAL",
            "BUSINESS",
            "GOVERNMENT",
            "EDUCATION",
            name="organizationtypecode",
        ),
        nullable=False,
    )

    op.drop_column("question_answer_results", "questionnaire_id")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.add_column(
        "question_answer_results",
        sa.Column(
            "questionnaire_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.alter_column(
        "organizations",
        "type",
        existing_type=postgresql.ENUM(
            "PERSONAL",
            "BUSINESS",
            "GOVERNMENT",
            "EDUCATION",
            name="organizationtypecode",
        ),
        nullable=True,
    )

    op.alter_column(
        "events", "name", existing_type=sa.VARCHAR(length=1024), nullable=True
    )
    op.add_column(
        "answers",
        sa.Column(
            "questionnaire_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(None, "answers", type_="foreignkey")
    # ### end Alembic commands ###
